{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["Index","props","nodes","data","allSanityPost","landingPage","map","post","key","_id","pageQuery"],"mappings":"2FAAA,iHAgCeA,UAlByB,SAAAC,GAAS,IAG1BC,EAEjBD,EAHFE,KACEC,cAAiBF,MAGrB,OACE,gBAAC,IAAD,CAAQG,aAAa,GACnB,gBAAC,IAAD,KACE,gBAAC,IAAD,wBACCH,EAAMI,KAAI,SAACC,GAAD,OACT,gBAAC,IAAD,CAAYA,KAAMA,EAAMC,IAAKD,EAAKE,YASrC,IAAMC,EAAY","file":"component---src-pages-index-tsx-b9f7eee89eba4e08f6f6.js","sourcesContent":["import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport { Container } from '../components/Layout/Container';\nimport { PostTeaser } from '../components/Blog/PostTeaser';\nimport { SectionTitle } from '../components/typography/SectionTitle';\n\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\n// to generate all types from graphQL schema\ninterface IndexPageProps {\n  readonly data: {\n    allSanityPost: { nodes: { _id: string }[] };\n  };\n}\nconst Index: React.FC<IndexPageProps> = props => {\n  const {\n    data: {\n      allSanityPost: { nodes },\n    },\n  } = props;\n  return (\n    <Layout landingPage={true}>\n      <Container>\n        <SectionTitle>Latest Articles</SectionTitle>\n        {nodes.map((post: any) => (\n          <PostTeaser post={post} key={post._id} />\n        ))}\n      </Container>\n    </Layout>\n  );\n};\n\nexport default Index;\n\nexport const pageQuery = graphql`\n  query {\n    allSanityPost(sort: { fields: _createdAt }) {\n      nodes {\n        ...PostFragment\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}